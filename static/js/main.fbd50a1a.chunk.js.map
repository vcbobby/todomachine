{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","TodoForm/index.js","Modal/index.js","CreateTodoButton/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","deleteTodo","todoIndex","findIndex","newTodos","splice","addTodo","push","completeTodo","children","TodoCounter","useContext","className","TodoSearch","onChange","event","console","log","target","placeholder","TodoList","TodoItem","onClick","onComplete","onDelete","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","Modal","ReactDOM","createPortal","document","getElementById","CreateTodoButton","AppUI","map","App","render"],"mappings":"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","file":"static/js/main.fbd50a1a.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage'\n\n\nconst TodoContext = React.createContext()\n\nfunction TodoProvider(props) {\n    \n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error\n    } = useLocalStorage('TODOS_V1', [])\n\n    const [searchValue, setSearchValue] = React.useState('')\n    const [openModal, setOpenModal] = React.useState(false)\n    \n    const completedTodos = todos.filter(todo => !!todo.completed).length\n    const totalTodos = todos.length\n    let searchedTodos = []\n\n\n    if (!searchValue.length >= 1) {\n    searchedTodos = todos\n    } else {\n    searchedTodos = todos.filter(todo => {\n        const todoText = todo.text.toLowerCase()\n        const searchText = searchValue.toLowerCase()\n        return todoText.includes(searchText)\n    })\n\n}\n\n\n    const addTodo = (text) => {\n        const newTodos = [...todos]\n\n        newTodos.push({\n            completed: false,\n            text,\n        })\n        saveTodos(newTodos)\n    }\n\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text)\n        const newTodos = [...todos]\n        const completed = newTodos[todoIndex].completed\n\n        if(completed === true) {\n            newTodos[todoIndex].completed = false\n        } else {\n            newTodos[todoIndex].completed = true\n        }\n        // newTodos[todoIndex] = {\n        //     text: todos[todoIndex].text,\n        //     completed: true,\n        // }\n        saveTodos(newTodos)\n    }\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text)\n        const newTodos = [...todos]\n\n        \n        // todos[todoIndex].completed = true\n        \n        newTodos.splice(todoIndex, 1)\n        saveTodos(newTodos)\n    }\n    \n    \n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            deleteTodo,\n            addTodo,\n            completeTodo,\n            openModal,\n            setOpenModal\n        }}>\n            {props.children}\n        </TodoContext.Provider>\n    )\n}\n\nexport { TodoContext, TodoProvider }\n","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport { useLocalStorage };","import React from 'react'\nimport { TodoContext } from '../TodoContext'\nimport './TodoCounter.css'\n\nfunction TodoCounter() {\n    const { totalTodos, completedTodos } = React.useContext(TodoContext)\n\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    )\n}\n\nexport { TodoCounter }","import React from 'react'\nimport { TodoContext } from '../TodoContext'\nimport './TodoSearch.css'\n\nfunction TodoSearch() {\n    const { searchValue, setSearchValue } = React.useContext(TodoContext)\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value)\n        setSearchValue(event.target.value)\n    }\n    \n    return (\n        <input onChange={onSearchValueChange} value={searchValue} className=\"TodoSearch\" placeholder=\"cebolla\" />\n    )\n}\n\nexport { TodoSearch }","import './TodoList.css'\n\nfunction TodoList(props) {\n    return (\n        <section>\n            {props.children}\n        </section>\n    )\n}\n   \nexport { TodoList }","import './TodoItem.css'\n\nfunction TodoItem(props) {\n\n    return (\n        <li className=\"TodoItem\">\n            <span onClick={props.onComplete} className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}>âˆš</span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>{props.text}</p>\n            <span onClick={props.onDelete} className=\"Icon Icon-delete\">X</span>\n        </li>\n    )\n}\n\nexport { TodoItem }","import React from 'react'\nimport { TodoContext } from '../TodoContext'\nimport './TodoForm.css'\n\nfunction TodoForm() {\n    const [newTodoValue, setNewTodoValue] = React.useState('')\n\n    const {\n        addTodo,\n        setOpenModal\n    } = React.useContext(TodoContext)\n\n    const onCancel = () => {\n        setOpenModal(false)\n    }\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        addTodo(newTodoValue)\n        setOpenModal(false)\n    }\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value)\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Escribe tu nuevo To Do</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Cortar la cebolla\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button className=\"TodoForm-button TodoForm-button-cancel\" type=\"button\" onClick={onCancel}>\n                    cancelar\n                </button>\n                <button className=\"TodoForm-button TodoForm-button-add\" type=\"submit\">\n                    aÃ±adir\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport { TodoForm }","import ReactDOM from 'react-dom'\nimport './Modal.css'\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    )\n}\n\nexport { Modal }","import './CreateTodoButton.css'\n\nfunction CreateTodoButton({ setOpenModal, openModal }) {\n    const onClickButton = () => {\n        if (openModal) {\n            setOpenModal(false);\n          } else {\n            setOpenModal(true);\n          }\n        };\n\n    return (\n        <button\n            className=\"CreateTodoButton\"\n            onClick={() => onClickButton()}\n        >\n            +\n            </button>\n    )\n}\n\nexport { CreateTodoButton }","import React from 'react'\nimport { TodoCounter } from '../TodoCounter'\nimport { TodoContext } from '../TodoContext'\nimport { TodoSearch } from '../TodoSearch'\nimport { TodoList } from '../TodoList'\nimport { TodoItem } from '../TodoItem'\nimport { TodoForm } from '../TodoForm'\nimport { Modal } from '../Modal'\nimport { CreateTodoButton } from '../CreateTodoButton'\n\nfunction AppUI() {\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = React.useContext(TodoContext)\n    \n    return (\n        <>\n            <TodoCounter />\n            <TodoSearch />\n            <TodoList>\n                {error && <p>OcurriÃ³ un error</p>}\n                {loading && <p>Estamos cargando</p>}\n                {(!loading && !searchedTodos.length) && <p>Crea tu primer TODO!</p>}\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n\n            {!!openModal && (\n                <Modal>\n                    <TodoForm />\n                </Modal>\n            )}\n\n            <CreateTodoButton\n                setOpenModal={setOpenModal} openModal={openModal}\n            />\n        </>\n    )\n}\n\nexport { AppUI }","import React from 'react'\n// import './App.css';\nimport { AppUI } from './AppUI'\nimport { TodoProvider } from '../TodoContext'\n\n// const defaultTodos = [\n//   { text: 'cortar cebolla', completed: true },\n//   { text: 'Completar curso', completed: false },\n//   { text: 'LLorar con la llorona', completed: false }\n// ]\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}